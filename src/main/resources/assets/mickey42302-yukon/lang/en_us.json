{
  "commands.warden_spawn_tracker.clear.success.multiple": "The specified warden spawn trackers have been cleared for %1$s",
  "commands.warden_spawn_tracker.clear.success.single": "The warden spawn tracker has been cleared for %1$s",
  "commands.warden_spawn_tracker.set.success.multiple": "The specified warden spawn trackers have been updated for %1$s",
  "commands.warden_spawn_tracker.set.success.single": "The warden spawn tracker has been updated for %1$s",
  "death.attack.anvil.item": "%1$s was squashed by a falling anvil while fighting %2$s using %3$s",
  "death.attack.arrow.player": "%1$s was shot by %2$s",
  "death.attack.cactus.item": "%1$s walked into a cactus while trying to escape %2$s using %3$s",
  "death.attack.cramming.item": "%1$s was squashed by %2$s using %3$s",
  "death.attack.dragonBreath.item": "%1$s was roasted in dragon's breath by %2$s using %3$s",
  "death.attack.drown.item": "%1$s drowned while trying to escape %2$s using %3$s",
  "death.attack.dryout.item": "%1$s died from dehydration while trying to escape %2$s using %3$s",
  "death.attack.explosion.item": "%1$s was blown up by %2$s using %3$s",
  "death.attack.explosion.player.player": "%1$s was blown up by %2$s",
  "death.attack.fall.item": "%1$s hit the ground too hard while trying to escape %2$s using %3$s",
  "death.attack.fallingBlock.item": "%1$s was squashed by a falling block while fighting %2$s using %3$s",
  "death.attack.fallingStalactite.item": "%1$s was skewered by a falling stalactite while fighting %2$s using %3$s",
  "death.attack.flyIntoWall.item": "%1$s experienced kinetic energy while trying to escape %2$s using %3$s",
  "death.attack.freeze.item": "%1$s was frozen to death by %2$s using %3$s",
  "death.attack.generic.item": "%1$s died because of %2$s using %3$s",
  "death.attack.genericKill.item": "%1$s was killed while fighting %2$s using %3$s",
  "death.attack.hotFloor.item": "%1$s walked into the danger zone due to %2$s using %3$s",
  "death.attack.inFire.item": "%1$s walked into fire while fighting %2$s using %3$s",
  "death.attack.inWall.item": "%1$s suffocated in a wall while fighting %2$s using %3$s",
  "death.attack.indirectMagic.player": "%1$s was killed by %2$s using magic",
  "death.attack.lava.item": "%1$s tried to swim in lava to escape %2$s using %3$s",
  "death.attack.lightningBolt.item": "%1$s was struck by lightning while fighting %2$s using %3$s",
  "death.attack.magic.item": "%1$s was killed by magic while trying to escape %2$s using %3$s",
  "death.attack.mob.player": "%1$s was slain by %2$s",
  "death.attack.outOfWorld.item": "%1$s fell out of the world while fighting %2$s using %3$s",
  "death.attack.outsideBorder.item": "%1$s left the confines of this world while fighting %2$s using %3$s",
  "death.attack.player.player": "%1$s was slain by %2$s",
  "death.attack.stalagmite.item": "%1$s was impaled on a stalagmite while fighting %2$s using %3$s",
  "death.attack.starve.item": "%1$s starved to death while fighting %2$s using %3$s",
  "death.attack.sweetBerryBush.item": "%1$s was poked to death by a sweet berry bush while trying to escape %2$s using %3$s",
  "death.attack.thorns.player": "%1$s was killed trying to hurt %2$s",
  "death.attack.thrown.player": "%1$s was pummeled by %2$s",
  "death.attack.trident.player": "%1$s was impaled by %2$s",
  "death.attack.wither.item": "%1$s withered away while fighting %2$s using %3$s",
  "death.attack.witherSkull.player": "%1$s was shot by a skull from %2$s",
  "death.fell.accident.ball": "%1$s fell while using an Ender Pearl",
  "death.fell.accident.water": "%1$s fell out of the water",
  "item.minecraft.tipped_arrow.effect.awkward": "Awkward Tipped Arrow",
  "item.minecraft.tipped_arrow.effect.mundane": "Mundane Tipped Arrow",
  "item.minecraft.tipped_arrow.effect.thick": "Thick Tipped Arrow",
  "yukon.debug.cycle_renderdistance.help": "F3 + J = Cycle render distance (shift to invert)",
  "yukon.debug.cycle_renderdistance.message": "Render Distance: %1$s",
  "yukon.debug.help.help": "F3 + F12 = Show this list",
  "yukon.debug.help.message": "Yukon key bindings:",
  "yukon.debug.uuid.help": "F3 + Y = Copy UUID to clipboard",
  "yukon.debug.uuid.copied": "UUID copied to clipboard",
  "yukon.reconnect": "Reconnect"
}
